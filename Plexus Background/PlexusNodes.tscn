[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

export var maxDots = 25
var positions = []
var sizes = []
var velocities = []
var screen
var screen_x
var screen_y

func _ready():
	_center_hud()
	for i in maxDots:
		spawnNew(Vector2(rand_range(-100, screen_x + 100), rand_range(-100, screen_y +100)))

func _center_hud():
	screen = get_viewport_rect().size
	screen_x = screen.x
	screen_y = screen.y
	self.set_size(Vector2(screen_x,screen_y))

func _process(delta):
	#Spawning
	if positions.size() < maxDots:
		spawnNew()
	#Movement
	for dot in positions:
		positions[positions.find(dot)] += velocities[positions.find(dot)]
	#Destroying
	for dot in positions:
		if dot.x < -200 || dot.y < -200 || dot.x > self.rect_size.x + 200 || dot.y > self.rect_size.y + 200:
			var dotID = positions.find(dot)
			positions.remove(dotID)
			sizes.remove(dotID)
			velocities.remove(dotID)
	update()

func spawnNew(pos = null):
	if pos == null:
		pos = newRandPos()
	var size = rand_range(((screen_x)/128), ((screen_x)/64))
	var vel = Vector2(rand_range(-((screen_x)/256), ((screen_x)/256)), rand_range(-((screen_x)/128), ((screen_x)/128)))
	positions.append(pos)
	sizes.append(size)
	velocities.append(vel)

func _draw():
	#Connecting
	for dot in positions:
		for otherDot in positions:
			if dot.distance_to(otherDot) < ((screen_x)/4):
				var alpha = clamp(dot.distance_to(otherDot)/((screen_x)/2), 0, ((screen_x)/16))
				draw_line(dot, otherDot, Color(1,1,1, alpha), ((screen_x)/256), true)
	#DrawDot
	for dot in positions:
		var dotID = positions.find(dot)
		draw_circle(positions[dotID], sizes[dotID], Color.whitesmoke)

func newRandPos():
	#Top
	var x1 = rand_range(-200, screen_x + 200)
	var y1 = rand_range(-200, -100)
	#Bottom
	var x2 = rand_range(-200, screen_x + 200)
	var y2 = rand_range(screen_y + 100, screen_y + 200)
	#Left
	var x3 = rand_range(-200, -100)
	var y3 = rand_range(-200, screen_y + 200)
	#Right
	var x4 = rand_range(screen_x + 100, screen_x + 200)
	var y4 = rand_range(-200, screen_y + 200)
	
	var pos = Vector2()
	var choose = int(rand_range(1,5))
	match choose:
		1:
			pos.x = x1
			pos.y = y1
		2:
			pos.x = x2
			pos.y = y2
		3:
			pos.x = x3
			pos.y = y3
		4:
			pos.x = x4
			pos.y = y4
	return pos
"

[node name="PlexusNodes" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -1024.0
margin_bottom = -600.0
mouse_filter = 2
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
